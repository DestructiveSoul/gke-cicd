steps:
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'us-central1-docker.pkg.dev/my-project-1470244463968/gke-repo/quickstart-image', './app1' ]
  id: 'Build Docker Image'

  # images:
  # - 'us-central1-docker.pkg.dev/my-project-1470244463968/gke-repo/quickstart-image'

- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'us-central1-docker.pkg.dev/my-project-1470244463968/gke-repo/quickstart-image' ]
  id: 'Push Docker Image'

- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'us-central1-docker.pkg.dev/my-project-1470244463968/gke-repo/flask-image', './app2' ]
  id: 'Build Docker Image2'

  # images:
  # - 'us-central1-docker.pkg.dev/<your_project_id>/gke-repo/quickstart-image'

- name: 'gcr.io/cloud-builders/gcloud'
  args: ['compute', 'networks', 'create', 'sp-gke-vpc-dev', '--subnet-mode=custom','--range=10.0.0.0/24']

- name: 'gcr.io/cloud-builders/gcloud'
  args: ['compute', 'networks', 'create', 'sp-gke-vpc-prd', '--subnet-mode=custom','--range=10.10.0.0/24']

- name: 'gcr.io/cloud-builders/gcloud'
  args: ['compute', 'networks', 'subnets', 'create', 'sp-gke-dsub', '--network=sp-gke-vpc-dev', '--region=us-central1', '--range=10.0.0.0/26']

- name: 'gcr.io/cloud-builders/gcloud'
  args: ['compute', 'networks', 'subnets', 'create', 'sp-gke-psub', '--network=sp-gke-vpc-prd', '--region=us-central1', '--range=10.10.0.64/26']

- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'us-central1-docker.pkg.dev/my-project-1470244463968/gke-repo/flask-image' ]
  id: 'Push Docker Image2'

- name: 'gcr.io/cloud-builders/gcloud'
  args: ['container', 'clusters', 'create', 'cluster-1', '--zone', 'us-central1-c', '--num-nodes', '1', '--enable-autoscaling', '--min-nodes', '0', '--max-nodes', '3', '--project', 'my-project-1470244463968', '--network', 'sp-gke-vpc-dev','--subnetwork', 'sp-gke-dsub']

- name: 'gcr.io/cloud-builders/gcloud'
  args: ['container', 'clusters', 'get-credentials', 'cluster-1', '--zone', 'us-central1-c', '--project', 'my-project-1470244463968']

- name: 'gcr.io/cloud-builders/gcloud'
  args: ['container', 'clusters', 'create', 'cluster-2', '--zone', 'us-central1-c', '--num-nodes', '1', '--enable-autoscaling', '--min-nodes', '0', '--max-nodes', '3', '--project', 'my-project-1470244463968',  '--network', 'sp-gke-vpc-prd','--subnetwork', 'sp-gke-psub']

- name: 'gcr.io/cloud-builders/gcloud'
  args: ['container', 'clusters', 'get-credentials', 'cluster-2', '--zone', 'us-central1-c', '--project', 'my-project-1470244463968']

- name: 'google/cloud-sdk:latest'
  entrypoint: 'sh'
  args:
  - -xe
  - -c
  - |
    gcloud deploy apply --file deploy/pipeline.yaml --region=us-central1
    gcloud deploy apply --file deploy/dev.yaml --region=us-central1
    gcloud deploy apply --file deploy/prod.yaml --region=us-central1
    gcloud deploy releases create 'app-release-${SHORT_SHA}' --delivery-pipeline=gke-cicd-pipeline --region=us-central1 --skaffold-file=skaffold.yaml

  #Below are for app.yaml
  # gcloud deploy releases create 'app-release-${SHORT_SHA}' --delivery-pipeline=gke-cicd-pipeline --region=us-central1 --from-k8s-manifest=./kubernetes/app1.yaml
  # gcloud deploy releases create 'app-release-${SHORT_SHA}' --delivery-pipeline=gke-cicd-pipeline --region=us-central1 --from-k8s-manifest=./kubernetes/app2.yaml

options:
  logging: CLOUD_LOGGING_ONLY
